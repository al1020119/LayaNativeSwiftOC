var jmt;
(function (jmt) {
    var Config = /** @class */ (function () {
        function Config() {
        }
        // 多行文本超出末尾省略
        Config.multiLineEllipsis = function (str, width, fontSize, lineNum) {
            var lineStrStotal = width / fontSize;
            var position = lineNum * lineStrStotal - 2;
            if (str.length > position) {
                str = str.slice(0, position) + '…';
            }
            return str;
        };
        Config.closeIcon = function (view) {
            var closeImg = new Laya.Image('skin/common/read_special_option_close_btn.png');
            view.addChild(closeImg);
            closeImg.top = -(closeImg.height / 2 - 10);
            closeImg.right = -(closeImg.width / 2 - 10);
            return closeImg;
        };
        Config.DEBUG = false; //开启调试模式
        Config.DEBUG_LOG = false;
        Config.NOVELID = 5077; //3782
        Config.GAMEID = 0; //小游戏ID 3854
        Config.PLATFORM = 100; //上线修改：10-微信小程序，11-QQ玩一玩，100-颜说平台
        Config.VERSION = '版本号：1.0.5';
        Config.OS = '';
        Config.DM = '';
        Config.CHL = 'jmt';
        Config.VN = '1.0.5';
        Config.VC = 105;
        Config.OSVN = '';
        Config.NET = '';
        Config.MODEL = '';
        Config.MID = '';
        Config.PREVIEW = 0; //平台预览
        Config.ISLOGIN = 0; //平台是否登录
        Config.ISSHAREBROWSER = 0; //分享 链接 浏览器打开
        Config.RESVERSION = 1;
        Config.RES_DOMAIN = 'https://erres.52jimu.com/';
        Config.IMG_DOMAIN_HTTP = 'http://erres.52jimu.com/';
        Config.IMG_DOMAIN_HTTP2 = 'http://img.er.52jimu.com/';
        Config.RES_BASEPATH = 'https://erres.52jimu.com/wxgame/lxjy/';
        // static API_DOMAIN : string = 'http://192.168.1.201:8800/';
        // static API_DOMAIN : string = 'http://erapi.ngrok.52jimu.com:8800/';
        // static API_DOMAIN : string = 'http://erapi.ngrok.52jimu.com:8800/';
        // static API_DOMAIN : string = 'http://api.fiction.com/';
        Config.API_DOMAIN = 'https://erapi.52jimu.com/';
        return Config;
    }());
    jmt.Config = Config;
    var SourceManager = /** @class */ (function () {
        function SourceManager() {
            this._currenResourceManager = laya.resource.ResourceManager.currentResourceManager;
            this._currenResourceManager.autoRelease = true;
            this._currenResourceManager.autoReleaseMaxSize = 136314880;
        }
        Object.defineProperty(SourceManager.prototype, "currenResourceManager", {
            get: function () {
                return this._currenResourceManager;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SourceManager, "instance", {
            get: function () {
                if (!SourceManager._instance) {
                    SourceManager._instance = new jmt.SourceManager();
                }
                return SourceManager._instance;
            },
            enumerable: true,
            configurable: true
        });
        //锁定资源。这样就不能自动清除
        SourceManager.prototype.lockSource = function (url, name) {
            var snowResource = new laya.resource.Resource();
            snowResource.name = name;
            snowResource._setUrl(url);
            snowResource.lock = true;
            this._currenResourceManager.addResource(snowResource);
        };
        // 按 索引 清除资源
        SourceManager.prototype.clearSource = function (index) {
            var source = this._currenResourceManager.getResourceByIndex(index);
            this._currenResourceManager.removeResource(source);
        };
        return SourceManager;
    }());
    jmt.SourceManager = SourceManager;
    var QQresType = /** @class */ (function () {
        function QQresType() {
        }
        QQresType.CHAPTER = 1;
        QQresType.OPTION = 2;
        QQresType.CLUE = 3;
        QQresType.QUESTION = 4;
        QQresType.DEATH = 5;
        QQresType.STORE = 6;
        QQresType.WAIT = 7;
        QQresType.SETTIMEOUT_PROP = 8;
        QQresType.INTO_BEFORE_VEDIO = 100;
        return QQresType;
    }());
    jmt.QQresType = QQresType;
    //全局数据
    var GlobalData = /** @class */ (function () {
        function GlobalData() {
        }
        GlobalData.QQ_TALK = '961530331';
        return GlobalData;
    }());
    jmt.GlobalData = GlobalData;
    // debugger打印方法，可以关闭
    var Console = /** @class */ (function () {
        function Console() {
        }
        Console.log = function (str) {
            if (jmt.Config.DEBUG) {
                if (WywUtil.onLimixiu()) {
                    // jmt.Print.log(str);
                }
                else {
                    // console.log(str);
                }
            }
        };
        return Console;
    }());
    jmt.Console = Console;
    // 全局打印
    var Print = /** @class */ (function () {
        function Print() {
        }
        Print.closeDebug = function () {
            if (jmt.Print.panelBox) {
                jmt.Print.panelBox.removeSelf();
                jmt.Print.panelBox.destroy();
            }
            if (jmt.Print.openBox) {
                jmt.Print.openBox.removeSelf();
                jmt.Print.openBox.destroy();
            }
            if (jmt.Print.clearBtn) {
                jmt.Print.clearBtn.removeSelf();
                jmt.Print.clearBtn.destroy();
            }
        };
        Print.show = function () {
            if (jmt.Config.DEBUG_LOG && jmt.Config.DEBUG) {
                jmt.Print.panelBox = new Laya.Panel();
                jmt.Print.openBox = new Laya.Box();
                jmt.Print.clearBtn = new Laya.Button('comp/button.png');
                jmt.Print.clearBtn.label = 'Clear';
                Laya.stage.addChild(jmt.Print.panelBox);
                Laya.stage.addChild(jmt.Print.openBox);
                Laya.stage.addChild(jmt.Print.clearBtn);
                jmt.Print.panelBox.alpha = 0.8;
                jmt.Print.panelBox.width = Laya.stage.width;
                jmt.Print.panelBox.height = Laya.stage.height / 2;
                jmt.Print.vbox = new Laya.VBox();
                jmt.Print.vbox.align = 'left';
                jmt.Print.vbox.space = 10;
                jmt.Print.panelBox.addChild(jmt.Print.vbox);
                jmt.Print.vbox.width = jmt.Print.panelBox.width - 40;
                jmt.Print.vbox.centerX = 0;
                jmt.Print.panelBox.graphics.drawRect(0, 0, jmt.Print.panelBox.width, jmt.Print.panelBox.height, '#000000');
                jmt.Print.panelBox.bottom = 0;
                jmt.Print.panelBox.vScrollBarSkin = '';
                jmt.Print.panelBox.zOrder = 1000;
                // jmt.Print.vbox.height=1000;
                jmt.Print.openBox.width = 50;
                jmt.Print.openBox.height = 50;
                jmt.Print.openBox.graphics.drawRect(0, 0, 50, 50, '#ff0000');
                jmt.Print.openBox.right = 0;
                jmt.Print.openBox.bottom = 200;
                jmt.Print.openBox.zOrder = 10000;
                jmt.Print.openBox.on(Laya.Event.CLICK, jmt.Print, jmt.Print.showHide);
                jmt.Print.clearBtn.width = 80;
                jmt.Print.clearBtn.height = 50;
                jmt.Print.clearBtn.left = 10;
                jmt.Print.clearBtn.bottom = 200;
                jmt.Print.clearBtn.zOrder = 10000;
                jmt.Print.clearBtn.labelSize = 30;
                jmt.Print.clearBtn.on(Laya.Event.CLICK, jmt.Print, jmt.Print.clear);
            }
        };
        Print.clear = function () {
            if (jmt.Print.vbox) {
                jmt.Print.vbox.removeChildren();
            }
        };
        Print.init = function () {
            if (jmt.Print.vbox) {
                for (var i = 0; i < jmt.Print.loglist.length; i++) {
                    var element = jmt.Print.loglist[i];
                    // console.log(element);
                    var info = new Label(element);
                    info.color = "#ffffff";
                    info.fontSize = 30;
                    jmt.Print.vbox.addChild(info);
                    // jmt.Print.vbox.height+=info.height;               
                }
            }
        };
        Print.log = function (str) {
            if (jmt.Config.DEBUG_LOG && jmt.Config.DEBUG) {
                if (!jmt.Print.panelBox) {
                    jmt.Print.show();
                }
                var element = void 0;
                if (typeof (str) == 'string' || typeof (str) == 'number') {
                    element = str;
                }
                else if (typeof (str) == 'object') {
                    element = JSON.stringify(str);
                }
                else if (typeof (str) == 'function') {
                    element = str.valueOf();
                }
                else if (typeof (str) == 'undefined') {
                    element = 'undefined';
                }
                else {
                    element = str;
                }
                if (jmt.Print.vbox) {
                    var info = new Label(element);
                    info.width = jmt.Print.vbox.width;
                    info.color = "#ffffff";
                    info.fontSize = 30;
                    info.wordWrap = true;
                    jmt.Print.vbox.addChild(info);
                }
            }
        };
        Print.showHide = function () {
            if (!jmt.Print.panelBox) {
                jmt.Print.show();
            }
            if (jmt.Print.panelBox.visible) {
                jmt.Print.panelBox.visible = false;
            }
            else {
                jmt.Print.panelBox.visible = true;
                // jmt.Print.init();               
            }
        };
        Print.onerror = function (msg, url, line, col, error) {
            //没有URL不上报！上报也不知道错误
            if (msg != "Script error." && !url) {
                return;
            }
            //采用异步的方式
            //我遇到过在window.onunload进行ajax的堵塞上报
            //由于客户端强制关闭webview导致这次堵塞上报有Network Error
            //我猜测这里window.onerror的执行流在关闭前是必然执行的
            //而离开文章之后的上报对于业务来说是可丢失的
            //所以我把这里的执行流放到异步事件去执行
            //脚本的异常数降低了10倍
            // setTimeout(function(){
            var data = {};
            //不一定所有浏览器都支持col参数
            col = col || (window.event && window.event.errorCharacter) || 0;
            data.url = url;
            data.line = line;
            data.col = col;
            if (!!error && !!error.stack) {
                //如果浏览器有堆栈信息
                //直接使用
                data.msg = error.stack.toString();
            }
            else if (!!arguments.callee) {
                //尝试通过callee拿堆栈信息
                var ext = [];
                var f = arguments.callee.caller, c = 3;
                //这里只拿三层堆栈信息
                while (f && (--c > 0)) {
                    ext.push(f.toString());
                    if (f === f.caller) {
                        break; //如果有环
                    }
                    f = f.caller;
                }
                var extstr = ext.join(",");
                data.msg = extstr;
            }
            //把data上报到后台！
            // if (!jmt.Print.panelBox) {
            //     jmt.Print.show();  
            // }
            var element = JSON.stringify(data);
            // jmt.Print.log(element);
            // },0);
            //return true;//返回true是因为不需要在console中打印错误了
        };
        ;
        Print.loglist = [];
        return Print;
    }());
    jmt.Print = Print;
    var Stat = /** @class */ (function () {
        function Stat() {
        }
        Stat.PAGE_NONE = 0; //无界面
        Stat.PAGE_HOME = 1; //首页主界面
        Stat.PAGE_READING = 2; //阅读中
        Stat.PAGE_CLUE = 3; //记忆碎片界面
        Stat.PAGE_COVER = 4; //图鉴界面
        Stat.PAGE_SKU = 5; //属性界面
        Stat.PAGE_SYS = 6; //系统界面
        Stat.PAGE_DEATH = 7; //死亡界面
        Stat.PAGE_CHAPTER_END = 8; //章节结束界面
        Stat.PAGE_CHAPTER_BUY = 9; //章节付费界面
        Stat.PAGE_SERIES = 10; //辩驳过程中
        Stat.PAGE_SHOWAD = 11; //观看广告过程中
        Stat.PAGE_ANALY = 12; //推理分析过程中
        Stat.PAGE_LOADING = 13; //加载过程中
        Stat.PAGE_STORE = 14; //加载过程中
        Stat.PAGE_LOG = 15; //阅读日志
        Stat.PAGE_ANALYLOG = 16; //推理记录
        Stat.PAGE_OPTION = 17; //选项
        Stat.PAGE_SUPER = 18; //万能道具
        Stat.PAGE_UNLOCK = 19; //章节解锁
        Stat.ACT_ENTER_PAGE = 1; //进入界面
        Stat.ACT_EXIT_APP = 100; //退出app
        Stat.ACT_LOAD_RES = 110; //开始加载资源
        Stat.ACT_LOADRES_COMPLETE = 111; //加载资源完成
        Stat.ACT_HOME_LOGIN = 201; //首页登录按钮点击
        Stat.ACT_HOME_SETTING = 202; //首页设置按钮点击
        Stat.ACT_HOME_START = 203; //首页开始按钮点击
        Stat.ACT_HOME_RESTART = 204; //首页从头开始按钮点击
        Stat.ACT_HOME_CONTUNE = 205; //首页继续按钮点击
        Stat.ACT_HOME_READSTORE = 206; //首页读取进度按钮点击
        Stat.ACT_HOME_COVER = 207; //首页图鉴按钮点击
        Stat.ACT_ENTER_READING = 210; //开始阅读
        Stat.ACT_READING_COMPLETE = 211; //完成阅读
        Stat.ACT_READ_COVER = 220; //阅读界面图鉴按钮点击
        Stat.ACT_READ_SKU = 221; //阅读界面属性按钮点击
        Stat.ACT_READ_CLUE = 222; //阅读界面碎片按钮点击
        Stat.ACT_READ_SYS = 223; //阅读界面系统按钮点击
        Stat.ACT_SYS_LOG = 231; //系统界面日志按钮点击
        Stat.ACT_SYS_CATLOG = 232; //系统界面目录按钮点击
        Stat.ACT_SYS_READSTORE = 233; //系统界面读档按钮点击
        Stat.ACT_SYS_STORE = 234; //系统界面存档按钮点击
        Stat.ACT_SYS_QGROUP = 235; //系统界面Q群按钮点击
        Stat.ACT_SYS_SHARE = 236; //系统界面分享按钮点击
        Stat.ACT_SYS_NIJI = 237; //系统界面社区按钮点击
        Stat.ACT_SYS_TEAM = 238; //系统界面制作组按钮点击
        Stat.ACT_STORE_ADD = 240; //添加存档点击
        Stat.ACT_STORE_READ = 241; //读取存档点击
        Stat.ACT_ANALY_TIPS = 242; //推理提示按钮点击
        Stat.ACT_SERIES_TIPS = 243; //辩驳提示按钮点击
        Stat.ACT_BUY_ALL = 250; //系统界面全内容套餐购买按钮点击
        Stat.ACT_BUY_ALL_SUCCESS = 251; //
        Stat.ACT_BUY_ALLCHAPTER = 252; //系统界面全章节购买按钮点击
        Stat.ACT_BUY_ALLCHAPTER_SUCCESS = 253;
        Stat.ACT_BUY_CHAPTER = 254; //单章节解锁购买按钮点击
        Stat.ACT_BUY_CHAPTER_SUCCESS = 255; //
        Stat.ACT_OPTION_DEATH = 260; //死亡选项点击
        Stat.ACT_OPTION_BUY = 261; //付费选项点击
        Stat.ACT_SHOWAD = 270; //观看广告解锁
        Stat.ACT_SHOWSHARE = 271; //分享解锁
        Stat.ACT_LOGIN_ERROR = 1000; //登录失败次数
        return Stat;
    }());
    jmt.Stat = Stat;
    var Api = /** @class */ (function () {
        function Api() {
        }
        Api.getMid = function () {
            var mid = jmt.Config.MID;
            if (!mid || mid == '') {
                mid = jmt.Data.openid;
            }
            if (mid == '') {
                mid = 'h5';
            }
            return mid;
        };
        Api.getApi = function (cmd) {
            var mid = this.getMid();
            return jmt.Config.API_DOMAIN + 'api/s1?cmd=' + cmd + '&uid=' + jmt.Data.uid + '&token=' + jmt.Data.token + '&novelid=' + jmt.Config.NOVELID + '&gameid=' + jmt.Config.GAMEID + '&resversion=' + jmt.Config.RESVERSION + '&preview=' + jmt.Config.PREVIEW + '&pl=' + jmt.Config.PLATFORM + '&chl=' + jmt.Config.CHL + '&net=' + jmt.Config.NET + '&os=' + jmt.Config.OS + '&vn=' + jmt.Config.VN + '&vc=' + jmt.Config.VC + '&osvn=' + jmt.Config.OSVN + '&dm=' + jmt.Config.DM + '&model=' + jmt.Config.MODEL + '&mid=' + mid;
        };
        //平台cmd
        Api.ATTENTION_AUTHOR = '102001'; //关注作者
        Api.JOIN_BOOKSHELF = '101101'; //加入收藏
        Api.GIVE_NOVEL_STAR = '101111'; //给小说点赞
        Api.PREVIEW_STAR_READ = '501551'; //预览开始阅读
        Api.PREVIEW_GET_CHAPTERINFO = '501651'; // 预览获取章节内容
        Api.STAT_LOG = '13001';
        Api.GET_GAME_CONFIG = '10001';
        Api.LOAD_RES = '500001'; //加载资源
        Api.TOKEN_LOGIN = '500051'; //TOKEN登录
        Api.RED_POINT = '500101'; //消息数
        Api.FEEDBACK = '500111'; //反馈
        Api.NOTICE_BOARD = '500131'; //反馈
        Api.NOVEL_INFO = '201001'; //小说信息
        Api.START_READING = '501501'; //开始阅读
        Api.CHECKPOINT = '501901'; //目录
        Api.CHAPTER_INFO = '502011'; //章节详情
        Api.CHAPTER_CONT = '501601'; //章节内容
        Api.SKU_VALUE = '502031'; //属性列表
        Api.NEXT_CHAPTER = '502051'; //下一章信息
        Api.STORE_LIST = '502501'; //存档列表
        Api.STORE_READING = '502511'; //存档
        Api.READ_STORE = '502521'; //读档
        Api.SYNC_READING = '502531'; //同步存档
        Api.REPLAY_CHAPTER = '502541'; //重读本章
        Api.POST_OPTION = '502611'; //提交选项
        Api.BRANCH_CHECK = '502621'; //支线检查点
        Api.BRANCH_END_CHECK = '502631'; //支线副本结束检查
        Api.SKU_CHECK = '502641'; //属性检查点
        Api.RENAME = '502651'; //设置角色名
        Api.RELIVE = '601101'; //复活
        Api.WAIT_CHECK = '502701'; //下线检查点
        Api.ANALY_CHECK = '502711'; //推理检查点
        Api.ROLE_COVER_LIST = '503011'; //角色图鉴
        Api.OPEN_ROLE = '503121'; //揭晓角色
        Api.UNLOCK_ROLE = '503141'; //解锁角色
        Api.CLUE_COLLECT = '505001'; //收集碎片
        Api.CLUE_ANALYSIS = '505011'; //分析碎片
        Api.CLUE_DEL = '505021'; //删除碎片
        Api.CLUE_LIST = '505101'; //碎片列表
        Api.CLUE_ANALYSIS_LIST = '505111'; //推理列表
        Api.READ_LOG = '505201'; //剧情日志
        Api.OAUTH_LOGIN = '510061'; //微信小程序登录
        Api.WANYIWAN_LOGIN = '510071'; //QQ玩一玩登录
        Api.PROP_PACKAGE_PAY = '600011'; //主线剧情加套餐全解锁+辅助道具
        Api.CREATE_ORDER = '601001'; //下单
        Api.CHECK_ORDER_STATE = '601021'; //检查订单状态
        Api.UNLOCK_STORE = '601121'; //解锁存档位
        Api.RIGHT_CLUE = '601201'; //请求正确推理线索
        Api.ERROR_TATTER = '601211'; //请求追问错误碎片
        Api.REDUCE_WAIT_TIME = '601221'; //减少等待时间
        Api.CHECK_BUY_SHARE = '601131'; //检查购买分享状态，分享类型（1-章节，2-选项，3-推理，4-追问，5死亡） 
        Api.CHECK_VIDEO_SHARE_COMPLETE = '601111'; //检查看视频成功，分享成功调用接口
        Api.CHECK_WYW_IS_ADD_DESK = '601241'; //检查QQ玩一玩Icon是否添加到桌面
        Api.ADD_DESK_GET = '601231'; //QQ玩一玩添加到桌面后领取奖励
        Api.QQ_INVITE_FRIENDS_INTO_GAME = '601151'; //QQ玩一玩邀请的好友进入游戏
        Api.SHARE_DATA_INFO = '501031'; //QQ玩一玩分享数据内容
        Api.READ_COMPLETE = '501021'; //完成阅读
        Api.QQ_CHAPTER_UNLOCK = '601141'; //QQ单章节解锁
        Api.MINI_BALANCE = '602001'; //获取小游戏余额
        Api.ORDER_PAYBACK_WX = '602011'; //小游戏充值回调
        Api.ORDER_PAYBACK_WYW = '602101'; //玩一玩充值回调
        return Api;
    }());
    jmt.Api = Api;
    var Resource = /** @class */ (function () {
        function Resource() {
        }
        Resource.toHttps = function (url) {
            url = url.replace(jmt.Config.IMG_DOMAIN_HTTP, jmt.Config.RES_DOMAIN);
            return url.replace(jmt.Config.IMG_DOMAIN_HTTP2, jmt.Config.RES_DOMAIN);
        };
        Resource.addDomain = function (url) {
            if (url && url != '') {
                url = this.toHttps(url);
                if (url.indexOf("https://") == -1) {
                    url = jmt.Config.RES_DOMAIN + url;
                }
            }
            return url;
        };
        Resource.clearTextureRes = function (url) {
            try {
                Loader.clearTextureRes(url);
            }
            catch (error) {
                return;
            }
        };
        Resource.RESTYPE_SOUND = 1; //声效
        Resource.RESTYPE_BGM = 2;
        Resource.RESTYPE_ROLE = 3;
        Resource.RESTYPE_VOICE = 4; //配音
        Resource.MAIN_BGM = jmt.Config.RES_BASEPATH + 'res/audio/main_bgm.mp3';
        Resource.SOUND_MAIN_START = jmt.Config.RES_BASEPATH + 'res/audio/main_start_sound.mp3';
        Resource.SOUND_CONT_ASIDE = jmt.Config.RES_BASEPATH + 'res/audio/cont_aside_sound.ogg';
        Resource.SOUND_CONT_TALK = 'res/audio/cont_talk_sound.ogg';
        Resource.SOUND_CLUE_FIND = jmt.Config.RES_BASEPATH + 'res/audio/clue_find_sound.mp3';
        Resource.SOUND_OPTION_MULTI = jmt.Config.RES_BASEPATH + 'res/audio/option_multi_sound.mp3';
        Resource.SOUND_OPTION_SERIES = jmt.Config.RES_BASEPATH + 'res/audio/option_series_sound.mp3';
        Resource.SOUND_TIME_DOWN = jmt.Config.RES_BASEPATH + 'res/audio/timedown_sound.mp3';
        Resource.SOUND_DEBATE_SUCCESS = 'debate_success.mp3'; //辩驳成功音效
        return Resource;
    }());
    jmt.Resource = Resource;
    var Skin = /** @class */ (function () {
        function Skin() {
        }
        Skin.FONT = 'SimHei';
        Skin.ERROR_NET_ICON = 'skin/common/net_abnormal_icon.png';
        Skin.BLANK_ICON = 'skin/common/pieces_blank_icon.png';
        Skin.ICON_SUCCESS = 'skin/common/prompt_good_icon.png';
        Skin.ICON_ERROR = 'skin/common/prompt_bad_icon.png';
        Skin.ICON_LOADING_NORMAL = 'skin/common/loading_normal.png';
        Skin.ICON_LOADING_FISH = 'skin/common/loading_fish.png';
        Skin.STARUP_BG = 'res/image/starup_page_bg_pic.jpg';
        Skin.LOADING_BG = 'res/image/loading_bg_pic.jpg';
        Skin.EFFECT_EYE = 'res/image/wink_pic3.png';
        Skin.READING_DEFBG = 'res/image/reading_defbg.jpg';
        Skin.READING_SUNSHINE = jmt.Config.RES_DOMAIN + 'scene/18/b0/e3/18b0e316ec9aa7867eefc05c0a75b1bf.jpg';
        Skin.READING_DARK = jmt.Config.RES_DOMAIN + 'scene/e9/02/3c/e9023c180e0bb1f2c9bbf27c9c9d72c6.jpg';
        Skin.READING_SNOW = jmt.Config.RES_DOMAIN + 'scene/fe/1d/c2/fe1dc2438dc5e96e6189847839489ad2.jpg';
        Skin.READING_RAIN = jmt.Config.RES_DOMAIN + 'scene/20/93/14/20931466aaf9683c05dc53ba692e50fd.jpg';
        Skin.EFFECT_FLASH1 = 'res/image/effect_flash1.png';
        Skin.EFFECT_FLASH2 = 'res/image/effect_flash2.png';
        Skin.EFFECT_FLASH3 = 'res/image/effect_flash3.png';
        Skin.CLIP_CHAPTER_INDEX = 'skin/common/clip_chapter_cover_title_number.png';
        Skin.CLIP_CATALOG_INDEX = 'skin/common/clip_catalog_title_number.png';
        Skin.BTN_MAIN_LOGIN = 'skin/home/btn_main_interface_log_in.png';
        Skin.BTN_MAIN_LOGIN_NORMAL = 'skin/home/btn_interface_log_in_normal.png';
        Skin.BTN_MAIN_START = 'skin/home/btn_main_interface_star.png';
        Skin.BTN_MAIN_SET = 'skin/home/btn_main_interface_set.png';
        Skin.BTN_MAIN_RESTART = 'skin/home/btn_main_interface_restar.png';
        Skin.BTN_MAIN_READSTORE = 'skin/home/btn_main_interface_read_progress.png';
        Skin.BTN_MAIN_ROLECOVER = 'skin/home/btn_main_interface_illustrationl.png';
        Skin.BTN_MAIN_CONTINUE = 'skin/home/btn_main_interface_continue.png';
        Skin.BTN_PROMPT = 'skin/common/btn_save_progress_prompt_btn.png';
        Skin.MAIN_BG = jmt.Config.RES_BASEPATH + 'res/image/main_interface_bg_pic.jpg';
        Skin.CHAPTER_COVER_BG = jmt.Config.RES_BASEPATH + 'res/image/chapter_cover_pic.jpg';
        Skin.GENERAL_BG = jmt.Config.RES_BASEPATH + 'res/image/general_bg_pic.jpg';
        Skin.ILLUSTRATION_BG = jmt.Config.RES_BASEPATH + 'res/image/illustration_bg_pic.jpg';
        Skin.PIECES_TUTORIAL_BG = jmt.Config.RES_BASEPATH + 'res/image/pieces_tutorial_pic.jpg';
        Skin.END_BG = jmt.Config.RES_BASEPATH + 'res/image/end_bg_pic2.jpg';
        Skin.TEAM_BG = 'res/image/starup_page_bg_pic.jpg';
        Skin.DEATH_BG = jmt.Config.RES_BASEPATH + 'res/image/dead_bg_pic.jpg';
        Skin.CHAPTER_PAYBG = jmt.Config.RES_BASEPATH + 'res/image/chapter_pay_bg_pic.jpg';
        Skin.MAIN_FOG1 = jmt.Config.RES_BASEPATH + 'res/image/main_interface_fog01_pic.png';
        Skin.MAIN_FOG2 = jmt.Config.RES_BASEPATH + 'res/image/main_interface_fog02_pic.png';
        Skin.SYS_BOX = jmt.Config.RES_BASEPATH + 'skin/system_box.png';
        Skin.SET_BOX = jmt.Config.RES_BASEPATH + 'skin/set_box.png';
        Skin.SHARE_BOX = jmt.Config.RES_BASEPATH + 'skin/share_box.png';
        Skin.CUSTOM_NAMEBOX_BG = jmt.Config.RES_BASEPATH + 'skin/read_custom_name_box.png';
        Skin.CHAT_BG = 'skin/common/read_dialog_box.png';
        Skin.CHAT_NAME_BG = 'skin/common/read_dialog_role_name_box.png';
        Skin.CHAT_MYNAME_BG = 'skin/common/read_dialog_custom_name_box.png';
        Skin.CHAT_NEXTBTN = 'skin/common/read_dialog_continue_icon.png';
        Skin.CLOSEUP_BG = 'skin/closeup/read_expression_box.png';
        Skin.LOADING_WAVE_LOVE = 'skin/sku/wave_love.png';
        Skin.LOADING_WAVE_HUMAN = 'skin/sku/wave_human.png';
        Skin.LOADING_WAVE_SPIRIT = 'skin/sku/wave_spirit.png';
        Skin.LOADING_HUMAN = 'skin/sku/property_humanity_container.png';
        Skin.LOADING_HUMAN_COVER = 'skin/sku/property_humanity_hyaline_container.png';
        Skin.LOADING_LOVE = 'skin/sku/property_love_container.png';
        Skin.LOADING_LOVE_COVER = 'skin/sku/property_love_hyaline_container.png';
        Skin.LOADING_BOTTLE = 'skin/sku/property_spirit_container.png';
        Skin.LOADING_BOTTLE_COVER = 'skin/sku/property_spirit_hyaline_container.png';
        Skin.SKU_BG_BIG = 'skin/sku/property_spirit_humanity_box.png';
        Skin.SKU_BG_SMALL = 'skin/sku/property_love_box.png';
        Skin.SKU_HEAD_COVER = 'skin/sku/property_hyaline_circle.png';
        Skin.SKU_PROMPT_BOX = 'skin/common/property_alter_prompt_box.png';
        Skin.CLUE_NORMAL_BOX = 'skin/clue/pieces_small_normal_box.png';
        Skin.CLUE_SELECTED_BOX = 'skin/clue/pieces_small_selected_box.png';
        Skin.CLUE_NAME_BG = 'skin/clue/pieces_big_label_name.png';
        Skin.CLUE_CHECKBOX_NORMAL = 'skin/clue/pieces_big_normal_btn.png';
        Skin.CLUE_CHECKBOX_SELECTED = 'skin/clue/pieces_big_selected_btn.png';
        Skin.CLUE_COLLECT_BG = jmt.Config.RES_BASEPATH + 'skin/pieces_bg.png';
        Skin.POPU_ADDDESK = jmt.Config.RES_BASEPATH + 'skin/add_desk_pic_1.png';
        Skin.READ_ANALY_SUCCESS = 'skin/clue/pieces_success_prompt.png';
        Skin.MSGBOX_BG = jmt.Config.RES_BASEPATH + 'skin/message_box.png';
        Skin.TIPS_PIECES_NORMAL = jmt.Config.RES_BASEPATH + 'skin/pieces_tutorial_normal.png';
        Skin.TIPS_PIECES_SELECTED = jmt.Config.RES_BASEPATH + 'skin/pieces_tutorial_selected.png';
        Skin.TIPS_STORE = jmt.Config.RES_BASEPATH + 'skin/save_progress_tutorial_pic.png';
        Skin.TIPS_LOG = jmt.Config.RES_BASEPATH + 'skin/journal_tutorial_pic.png';
        Skin.TIPS_SKU = jmt.Config.RES_BASEPATH + 'skin/property_tutorial_pic.png';
        Skin.TIPS_WAIT = jmt.Config.RES_BASEPATH + 'skin/wait_time_tutorial_pic.png';
        Skin.TIPS_CLUE_1 = jmt.Config.RES_BASEPATH + 'skin/pieces_tutorial01_pic.png';
        Skin.TIPS_CLUE_2 = jmt.Config.RES_BASEPATH + 'skin/pieces_tutorial02_pic.png';
        Skin.NOTES_BG = jmt.Config.RES_BASEPATH + 'res/image/notes_bg_pic.jpg';
        Skin.NOTES_BIG_BOX = jmt.Config.RES_BASEPATH + 'skin/notes_big_box.png';
        Skin.NOTES_SMALL_BOX = jmt.Config.RES_BASEPATH + 'skin/notes_small_box.png';
        Skin.NOTES_LEFT_BOX = jmt.Config.RES_BASEPATH + 'skin/notes_left_box.png';
        Skin.NOTES_RIGHT_BOX = jmt.Config.RES_BASEPATH + 'skin/notes_right_box.png';
        Skin.NOTES_TITLE_CHECK = 'skin/clue/notes_title_selected_btn.png';
        Skin.CATALOG_TITLE = 'skin/common/catalog_top_label_name.png';
        Skin.CATALOG_CLIP_NUM = 'skin/common/clip_catalog_title_number.png';
        Skin.OPTION_NORMAL_BTN = 'skin/option/read_option_normal_btn.png';
        Skin.OPTION_SPECIAL_ICON = 'skin/option/read_special_option_icon.png';
        Skin.OPTION_SELECTED_BTN = 'skin/option/read_option_selected_btn.png';
        Skin.OPTION_MULTI_NORMAL_BTN = 'skin/option/read_multiple_normal_btn.png';
        Skin.OPTION_MULTI_SELECTED_BTN = 'skin/option/read_multiple_selected_btn.png';
        Skin.PIECES_OKBTN = 'skin/common/btn_pieces_record_normal.png';
        Skin.PIECES_SELECT_BTN = 'skin/common/pieces_record_selected_btn.png';
        Skin.PIECES_BOX = 'skin/common/pieces_record_number_box.png';
        Skin.PIECES_RESULT_BOX = jmt.Config.RES_BASEPATH + 'skin/pieces_results_box.png';
        Skin.READ_AUTO_PLAY = 'skin/common/read_auto_normal_btn.png';
        Skin.READ_AUTO_FAST = 'skin/common/read_acceleratel_btn.png';
        Skin.READ_AUTO_PAUSE = 'skin/common/read_auto_selected_btn.png';
        Skin.READ_TIME_CLOCK = 'skin/option/read_time_clock_icon.png';
        Skin.READ_TIME_POINTER = 'skin/option/read_time_pointer_icon.png';
        Skin.READ_TIME_REDBG = 'skin/option/read_time_red_line.png';
        Skin.READ_TIME_TITLE = 'skin/option/read_time_title.png';
        Skin.READ_REFUTE_START = 'skin/series/read_key_words_refute_star.png';
        Skin.READ_REFUTE_FAIL = 'skin/series/read_key_words_refute_fail.png';
        Skin.READ_REFUTE_SUCCESS = 'skin/series/read_key_words_refute_success.png';
        Skin.READ_CLOSE_COVER = 'skin/closeup/read_expression_blank_box.png';
        Skin.READ_CLOSE_BG = 'skin/closeup/read_expression_bot_box.png';
        Skin.READ_RED_POINT = 'skin/common/change_prompt_red_point.png';
        Skin.READ_MENU_CLUE = 'skin/common/read_clue.png';
        Skin.READ_MENU_COVER = 'skin/common/illustration_icon.png';
        Skin.READ_MENU_SKU = 'skin/common/read_sku.png';
        Skin.READ_MENU_SYS = 'skin/common/read_sys.png';
        Skin.READ_SHARE_BTN = 'skin/common/share_icon.png';
        Skin.NO_END_TEXT = "skin/common/unfinished_title.png";
        Skin.STORE_NORMAL_BOX = 'skin/store/read_progress_normal_box.png';
        Skin.STORE_SELECTED_BOX = 'skin/store/read_progress_selected_box.png';
        Skin.STORE_PROMPT_BOX = 'skin/store/read_progress_prompt_box.png';
        Skin.STORE_ADD_ICON = 'skin/store/save_progress_add_icon.png';
        Skin.WORD_TITLE_STORE_READ = 'skin/store/read_progress_top_label_name.png';
        Skin.WORD_TITLE_STORE_SAVE = 'skin/store/save_pregress_top_label_name.png';
        Skin.COVER_PERSON = 'skin/cover/illustration_left_lock_person.png';
        Skin.COVER_PERSON_NAME = 'skin/cover/illustration_left_normal_person.png';
        Skin.COVER_NORMAL_BOX = 'skin/cover/illustration_left_unlock_normal_role_box.png';
        Skin.COVER_SELECTED_BOX = 'skin/cover/illustration_left_unlock_selected_role_box.png';
        Skin.COVER_DEFAULT = "skin/cover/illustration_left_lock_person.png";
        Skin.OPTION_KEYWORD_STONE1 = 'skin/series/read_key_words_stone1.png';
        Skin.OPTION_KEYWORD_STONE2 = 'skin/series/read_key_words_stone2.png';
        Skin.OPTION_KEYWORD_STONE3 = 'skin/series/read_key_words_stone3.png';
        Skin.OPTION_KEYWORD_STONE4 = 'skin/series/read_key_words_stone4.png';
        Skin.OPTION_KEYWORD_STONE5 = 'skin/series/read_key_words_stone5.png';
        Skin.OPTION_KEYWORD_STONE6 = 'skin/series/read_key_words_stone6.png';
        Skin.OPTION_STONE_ARR = {
            1: 'skin/series/read_key_words_stone1.png',
            2: 'skin/series/read_key_words_stone2.png',
            3: 'skin/series/read_key_words_stone3.png',
            4: 'skin/series/read_key_words_stone4.png',
            5: 'skin/series/read_key_words_stone5.png',
            6: 'skin/series/read_key_words_stone6.png',
        };
        return Skin;
    }());
    jmt.Skin = Skin;
    var Response = /** @class */ (function () {
        function Response() {
        }
        Response.USER_NO_LOGIN = 21000;
        Response.USER_LOGIN_ERROR = 21001; //登录验证过期
        Response.USER_FORBID_ERROR = 21002; //用户被禁用
        Response.USER_OTHER_LOGIN = 21003; //用户已在其他设备登录
        Response.USER_NAME_ERROR = 21010;
        Response.USER_PWD_ERROR = 21011;
        return Response;
    }());
    jmt.Response = Response;
    var Novel = /** @class */ (function () {
        function Novel() {
        }
        Novel.STATUS_SUBMIT = 0; //提交审核
        Novel.STATUS_PUBLISH = 1; //已发布
        Novel.STATUS_OFFSALE = 2; //已下架
        Novel.STATUS_NEW = -1; //未提交
        Novel.STATUS_REFUSE = -2; //审核拒绝
        Novel.STATUS_DEL = -10; //删除
        return Novel;
    }());
    jmt.Novel = Novel;
    var Content = /** @class */ (function () {
        function Content() {
        }
        Content.TYPE_ASIDE = 0;
        Content.TYPE_TALK = 1;
        Content.TYPE_IMG = 2;
        Content.TYPE_PROP = 10; //道具图片
        Content.TYPE_WAIT = 20; //下线等待点
        Content.TYPE_ANALY = 21; //推理检查点
        Content.TYPE_CHECK = 100; //支线检查点
        Content.TYPE_ROLECHECK = 101; //角色检查点
        Content.TYPE_ROLEHIDE = 102; //角色隐藏检查点
        Content.TYPE_SKUCHECK = 103; //属性检查点
        Content.TYPE_NAMECHECK = 104; //名字检查点
        Content.TYPE_ANSWER = 200; //选项回答
        Content.TYPE_REPLY = 201; //选项回复
        Content.OPTYPE_NORMAL = 1;
        Content.OPTYPE_MULTI = 2; //多选
        Content.OPTYPE_LEAD = 3; //带人
        Content.OPTYPE_SERIES = 10; //追问
        Content.EFFECT_ADDON_SHAKE = 1;
        Content.EFFECT_ADDON_FLASHWHITE = 2;
        Content.EFFECT_ADDON_FLASHBLACK = 3;
        Content.EFFECT_ADDON_EYE = 4;
        Content.EFFECT_OVER_SLOWWHITE = 1;
        Content.EFFECT_OVER_SLOWBLACK = 2;
        Content.EFFECT_OVER_FASTWHITE = 3;
        Content.EFFECT_OVER_FASTBLACK = 4;
        Content.EFFECT_OVER_RUNWHITE = 5;
        Content.EFFECT_OVER_RUNBLACK = 6;
        Content.SKY_SUN = 1;
        Content.SKY_STAR = 2;
        Content.SKY_SNOW = 3;
        Content.SKY_RAIN = 4;
        Content.SKY_FLAME = 5;
        return Content;
    }());
    jmt.Content = Content;
    var Branch = /** @class */ (function () {
        function Branch() {
        }
        Branch.TYPE_NORMAL = 0; //结局
        Branch.TYPE_COPY = 1; //副本
        Branch.TYPE_SERIES = 2; //追问
        Branch.TYPE_LEAD = 3; //带人   
        Branch.TYPE_DEATH = 4; //死亡
        Branch.TYPE_SWIPER = 5; //轮播插图      
        return Branch;
    }());
    jmt.Branch = Branch;
    var Sku = /** @class */ (function () {
        function Sku() {
        }
        Sku.TYPE_LOVE = 0; //结局
        Sku.TYPE_BOTTLE = 1; //副本
        Sku.TYPE_HUMAN = 2; //追问     
        return Sku;
    }());
    jmt.Sku = Sku;
    var Order = /** @class */ (function () {
        function Order() {
        }
        Order.PAYTYPE_WEIXIN = 1;
        Order.PAYTYPE_ALIPAY = 2;
        Order.PAYTYPE_WXMINI = 10;
        Order.PAYTYPE_QQWYW = 11;
        return Order;
    }());
    jmt.Order = Order;
    var Data = /** @class */ (function () {
        function Data() {
        }
        Data.setVolume = function (type, value) {
            this.voicedata[type] = value;
        };
        // 兼容微信小游戏的LocalStorage
        Data.getItem = function (key) {
            if (Laya.Browser.onMiniGame) {
                try {
                    var value = wx.getStorageSync(key);
                    if (value) {
                        // Do something with return value
                        return value;
                    }
                }
                catch (e) {
                    // Do something when catch error
                }
            }
            else {
                return Laya.LocalStorage.getItem(key);
            }
        };
        Data.setItem = function (key, value) {
            if (Laya.Browser.onMiniGame) {
                try {
                    wx.setStorageSync(key, value);
                }
                catch (e) { }
            }
            else {
                Laya.LocalStorage.setItem(key, value);
            }
        };
        Data.getJSON = function (key) {
            if (Laya.Browser.onMiniGame) {
                try {
                    var value = wx.getStorageSync(key);
                    if (value) {
                        // Do something with return value
                        return value;
                    }
                }
                catch (e) {
                    // Do something when catch error
                }
            }
            else {
                return Laya.LocalStorage.getJSON(key);
            }
        };
        Data.setJSON = function (key, value) {
            if (Laya.Browser.onMiniGame) {
                try {
                    wx.setStorageSync(key, value);
                }
                catch (e) { }
            }
            else {
                Laya.LocalStorage.setJSON(key, value);
            }
        };
        Data.removeItem = function (key) {
            if (Laya.Browser.onMiniGame) {
                try {
                    wx.removeStorageSync(key);
                }
                catch (e) {
                    // Do something when catch error
                }
            }
            else {
                Laya.LocalStorage.removeItem(key);
            }
        };
        Data.getVolume = function (type) {
            if (this.voicedata[type] || this.voicedata[type] === 0) {
                return this.voicedata[type];
            }
            else {
                if (type == jmt.Resource.RESTYPE_BGM) {
                    return 40;
                }
                else if (type == jmt.Resource.RESTYPE_VOICE) {
                    return 80;
                }
                else {
                    return 50;
                }
            }
        };
        Data.getPlayVolume = function (type) {
            if (this.voicedata[type] || this.voicedata[type] === 0) {
                return this.voicedata[type] / 100;
            }
            else {
                if (type == jmt.Resource.RESTYPE_BGM) {
                    return 0.4;
                }
                else if (type == jmt.Resource.RESTYPE_VOICE) {
                    return 0.8;
                }
                else {
                    return 0.5;
                }
            }
        };
        Data.hasTips = function (act) {
            var tipsdata = jmt.Data.getJSON(this.tipskey);
            if (tipsdata && tipsdata[act]) {
                return true;
            }
            return false;
        };
        Data.setTips = function (act) {
            var tipsdata = jmt.Data.getJSON(this.tipskey);
            if (!tipsdata) {
                tipsdata = {};
            }
            tipsdata[act] = 1;
            jmt.Data.setJSON(this.tipskey, tipsdata);
        };
        Data.delUser = function () {
            this.userinfo = null;
            this.uid = 0;
            this.token = '';
            jmt.Data.removeItem(this.userkey);
        };
        Data.setUser = function (userinfo) {
            if (userinfo) {
                this.userinfo = userinfo;
                this.uid = parseInt(userinfo.uid);
                this.token = userinfo.token;
                jmt.Data.setJSON(this.userkey, userinfo);
            }
        };
        Data.getUser = function () {
            var uinfo = jmt.Data.getJSON(this.userkey);
            if (uinfo) {
                this.userinfo = uinfo;
                this.uid = parseInt(uinfo.uid);
                this.token = uinfo.token;
                return this.userinfo;
            }
            return false;
        };
        /**
         * 读档重置本地存档
         * @param storeinfo
         * @param readloglist
         */
        Data.resetStore = function (storeinfo, chapterinfo, readloglist) {
            jmt.Data.removeItem(this.storekey);
            jmt.Data.removeItem(this.logkey);
            jmt.Data.removeItem(this.existlogkey);
            if (storeinfo) {
                jmt.Data.storeinfo = storeinfo;
                if (storeinfo.renamerole) {
                    //已设置角色名
                    jmt.Data.renamerole = storeinfo.renamerole;
                }
                if (storeinfo.unlockrole) {
                    //保存已解锁的角色
                    for (var i = 0; i < storeinfo.unlockrole.length; i++) {
                        var roleid = storeinfo.unlockrole[i];
                        jmt.Data.unlockrole[roleid] = roleid;
                    }
                }
                storeinfo = {
                    novelid: jmt.Config.NOVELID,
                    chapterid: chapterinfo.chapterid,
                    conid: storeinfo.conid,
                    readindex: storeinfo.readindex,
                    conindex: storeinfo.conindex,
                    branchid: chapterinfo.branchid
                };
                jmt.Data.setJSON(this.storekey, storeinfo);
            }
            if (!readloglist) {
                readloglist = [];
            }
            var existinfo = {};
            for (var i = 0; i < readloglist.length; i++) {
                var element = readloglist[i];
                existinfo[element.conid] = 1;
            }
            // jmt.Data.setItem(this.chapterkey,rootchapterid);
            jmt.Data.setJSON(this.logkey, readloglist);
            jmt.Data.setJSON(this.existlogkey, existinfo);
        };
        /**
         * 存档
         * @param chapterinfo
         * @param coninfo
         * @param readindex
         */
        Data.storeReading = function (chapterinfo, coninfo) {
            var chapterid = chapterinfo.chapterid;
            var conid = coninfo.conid;
            var cont = coninfo.cont;
            var conindex = coninfo.index;
            var branchid = chapterinfo.branchid;
            var roleid = 0;
            var rolename = '';
            if (coninfo.roledata && coninfo.roledata.say) {
                roleid = coninfo.roledata.say.roleid;
                // rolename = jmt.Data.renamerole&&jmt.Data.renamerole[coninfo.roledata.say.roleid]?jmt.Data.renamerole[coninfo.roledata.say.roleid]:coninfo.roledata.say.name;
                if (jmt.Data.renamerole && jmt.Data.renamerole[roleid]) {
                    rolename = jmt.Data.renamerole[roleid];
                }
                else {
                    rolename = coninfo.roledata.say.name;
                }
            }
            var storeinfo = {
                novelid: jmt.Config.NOVELID,
                chapterid: chapterid,
                conid: conid,
                conindex: conindex,
                branchid: branchid
            };
            // if (coninfo.type==jmt.Content.TYPE_ANSWER||coninfo.type==jmt.Content.TYPE_REPLY) {
            //     var opid = coninfo.opid?coninfo.opid:0;
            //     if (!opid) {
            //         return ;
            //     }
            // }
            // var storechapterid = jmt.Data.getItem(this.chapterkey);
            //生成时间戳
            var addtime = (Date.now()) / 1000;
            var loginfo = {
                novelid: jmt.Config.NOVELID,
                chapterid: chapterid,
                type: coninfo.type,
                conid: conid,
                cont: cont,
                roleid: roleid,
                rolename: rolename,
                branchid: branchid,
                addtime: addtime
            };
            var loglist = jmt.Data.getJSON(this.logkey);
            if (!loglist) {
                loglist = [];
                loglist.push(loginfo);
            }
            else {
                loglist.push(loginfo);
            }
            // jmt.Data.setItem(this.chapterkey,rootchapterid);
            //判断这条内容是否存在，如果不存在，才存到本地，才添加到loglist，这样防止重复添加，比如在推理的时候回出现点击多次显示同一内容
            var existinfo = jmt.Data.getJSON(this.existlogkey);
            if (!existinfo) {
                existinfo = {};
            }
            if (!existinfo[conid]) {
                existinfo[conid] = 1;
                jmt.Data.setJSON(this.storekey, storeinfo);
                jmt.Data.setJSON(this.logkey, loglist);
                jmt.Data.setJSON(this.existlogkey, existinfo);
            }
        };
        Data.getCurrentStore = function () {
            var storeinfo = jmt.Data.getJSON(this.storekey);
            return storeinfo;
        };
        Data.getReadLoglist = function () {
            var list = jmt.Data.getJSON(this.logkey);
            return list;
        };
        /**
         * 删除章节日志(追问)
         * @param chapterid
         */
        Data.delReadLog = function (chapterid) {
            var list = jmt.Data.getJSON(this.logkey);
            // var existlist = Laya.LocalStorage.getJSON(this.existlogkey);
            var existinfo = {};
            var newlist = [];
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    var element = list[i];
                    if (element.chapterid != chapterid) {
                        existinfo[element.conid] = 1;
                        newlist.push(element);
                    }
                }
                jmt.Data.setJSON(this.logkey, newlist);
                jmt.Data.setJSON(this.existlogkey, existinfo);
            }
        };
        Data.TIPS_TYPE_STORE = 1;
        Data.TIPS_TYPE_LOG = 2;
        Data.TIPS_TYPE_SKU = 3;
        Data.TIPS_TYPE_CLUE = 4;
        Data.TIPS_TYPE_WAIT = 5;
        Data.TIPS_TYPE_NOTICE = 6;
        Data.TIPS_TYPE_CLUE_1 = 7;
        Data.TIPS_TYPE_CLUE_2 = 8;
        Data.uid = 0;
        Data.debug_uid = 0; //643529,630146,628863,628941
        Data.token = '';
        Data.openid = '';
        Data.msgcount = { clue_num: 0, sku_num: 0, role_num: 0 };
        Data.renamerole = {};
        Data.unlockrole = {};
        Data.openrolelist = {};
        Data.readloglist = [];
        Data.storekey = 'storeinfo';
        Data.logkey = 'readlog';
        Data.existlogkey = 'existlog';
        Data.chapterkey = 'storechapter';
        Data.userkey = 'userinfo';
        Data.tipskey = 'showtips';
        Data.unlockFast = 'fast';
        Data.voicedata = {};
        return Data;
    }());
    jmt.Data = Data;
})(jmt || (jmt = {}));
//# sourceMappingURL=JmtAir.js.map