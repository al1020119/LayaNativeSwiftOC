var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * 图片立绘
 */
var ImgRoleBox = /** @class */ (function (_super) {
    __extends(ImgRoleBox, _super);
    function ImgRoleBox(view, role, x, y, wp) {
        if (wp === void 0) { wp = 1; }
        var _this = _super.call(this) || this;
        _this.mStartX = 400;
        _this.mStartY = 500;
        _this.index = 0;
        _this.roleid = 0;
        _this.type = 0;
        _this.covertype = 0;
        _this.postype = 0;
        _this.realWidth = 500;
        _this.scaleper = 1;
        _this.mPlay = false;
        _this.isdelete = false;
        _this._showspeed = 300;
        _this.roleinfo = role;
        _this.index = role.index;
        _this.roleid = role.roleid;
        _this.type = parseInt(role.type);
        // this.maskBox = new Sprite();
        view && view.addChild(_this);
        _this.top = 0;
        _this.bottom = 0;
        _this.left = 0;
        _this.right = 0;
        _this.mStartX = x;
        _this.mStartY = y;
        // var width = view.width/2;
        if (view) {
            var width = view.width * wp;
            // console.log("width: "+width);
            _this.scaleper = width / _this.realWidth;
            // console.log("scaleper: "+this.scaleper);
        }
        return _this;
    }
    Object.defineProperty(ImgRoleBox.prototype, "showspeed", {
        set: function (value) {
            this._showspeed = value;
        },
        enumerable: true,
        configurable: true
    });
    //加载动画
    ImgRoleBox.prototype.load = function (imgUrl, complete) {
        if (!imgUrl || imgUrl == '') {
            return;
        }
        // console.log('load:'+this.emoji);
        if (complete) {
            this.completeHandler = complete;
        }
        if (imgUrl) {
            this.imgUrl = imgUrl;
            this.roleImg = new Laya.Image();
            this.roleImg.bottom = 0;
            this.roleImg.alpha = 0;
            Laya.loader.load(this.imgUrl, Handler.create(this, this.loadComplete), null, Laya.Loader.IMAGE);
        }
        // this.roleImg.on(Laya.Event.LOADED,this,this.loadComplete);
    };
    ImgRoleBox.prototype.loadComplete = function () {
        // console.log('===========图片立绘加载完成==========');
        if (this.roleImg) {
            this.roleImg.skin = this.imgUrl;
            this.addChild(this.roleImg);
            // console.log("loadComplete-x:"+this.roleImg.x);
            var scalePix = (Laya.stage.height * 0.5) / this.roleImg.height;
            scalePix = scalePix.toFixed(2);
            this.roleImg.height = Laya.stage.height * 0.5;
            this.roleImg.width = this.roleImg.width * scalePix;
            this.roleImg.pivotX = this.roleImg.width / 2;
            this.roleImg.x = this.mStartX;
            this.roleImg.scale(this.scaleper, this.scaleper);
            //图片立绘加载完成，根据图片高度，显示盘白说话对话框的位置
            if (ReadingView._instans) {
                if (ReadingView._instans.speakType == SpeakType.supportingRole) {
                    // let scalePix: any = (Laya.stage.width) / this.roleImg.width;
                    // scalePix = scalePix.toFixed(2);
                    // this.roleImg.width = Laya.stage.width;
                    // this.roleImg.height = this.roleImg.height * scalePix;
                    //加载图片完成，根据图片宽高，改变打字对话框的位置
                    var posY = this.roleImg.height * 0.9;
                    SpeakManager.instance().changePos(posY);
                }
            }
            this.show();
        }
        if (this.completeHandler) {
            this.completeHandler.runWith(this);
        }
        if (this.isdelete) {
            this.remove();
        }
    };
    //改变表情
    ImgRoleBox.prototype.changeEmoji = function (skin) {
        // console.log("changeEmoji:"+skin);
        if (skin) {
            Laya.loader.load(skin, Handler.create(this, this.changeEmojLoadComplete, [skin]), null, Laya.Loader.IMAGE);
        }
    };
    ImgRoleBox.prototype.changeEmojLoadComplete = function (skin) {
        if (this.roleImg) {
            this.roleImg.skin = skin;
            // console.log("loadComplete-x:"+this.roleImg.x);
            var scalePix = (Laya.stage.height * 0.5) / this.roleImg.height;
            scalePix = scalePix.toFixed(2);
            this.roleImg.height = Laya.stage.height * 0.5;
            this.roleImg.width = this.roleImg.width * scalePix;
            this.roleImg.pivotX = this.roleImg.width / 2;
            this.roleImg.x = this.mStartX;
            this.roleImg.scale(this.scaleper, this.scaleper);
            //图片立绘加载完成，根据图片高度，显示盘白说话对话框的位置
            if (ReadingView._instans) {
                if (ReadingView._instans.speakType == SpeakType.supportingRole) {
                    // let scalePix: any = (Laya.stage.width) / this.roleImg.width;
                    // scalePix = scalePix.toFixed(2);
                    // this.roleImg.width = Laya.stage.width;
                    // this.roleImg.height = this.roleImg.height * scalePix;
                    //加载图片完成，根据图片宽高，改变打字对话框的位置
                    var posY = this.roleImg.height * 0.9;
                    SpeakManager.instance().changePos(posY);
                }
            }
        }
    };
    ImgRoleBox.prototype.play = function (skin) {
        this.roleImg.skin = skin;
    };
    ImgRoleBox.prototype.show = function () {
        Laya.Tween.to(this.roleImg, { alpha: 1 }, this._showspeed);
    };
    ImgRoleBox.prototype.hide = function () {
        Laya.Tween.to(this.roleImg, { alpha: 0 }, 300);
    };
    ImgRoleBox.prototype.remove = function (speed) {
        if (speed === void 0) { speed = 200; }
        this.isdelete = true;
        if (this.roleImg) {
            var param = { x: this.roleImg.x };
            if (this.postype == 1) {
                param.x = 0;
                Laya.Tween.to(this.roleImg, param, speed);
            }
            else if (this.postype == 2) {
                param.x = this.width;
                Laya.Tween.to(this.roleImg, param, speed);
            }
            Laya.Tween.to(this.roleImg, { alpha: 0 }, speed, null, Handler.create(this, this.removeComplete));
        }
    };
    ImgRoleBox.prototype.removeComplete = function () {
        try {
            if (this.roleImg) {
                this.roleImg.removeSelf();
                this.roleImg = null;
                // this.roleImg.destroy(true);
            }
            this.removeSelf();
        }
        catch (error) {
            // jmt.Print.log(error);
        }
    };
    ImgRoleBox.prototype.resize = function (front) {
        if (front === void 0) { front = 1; }
        if (front == 1) {
            Laya.Tween.to(this.roleImg, { scaleX: this.scaleper, scaleY: this.scaleper }, this._showspeed);
            // this.disabled=true;                
            // this.maskBox.alpha=1;
            this.hideMask();
        }
        else {
            Laya.Tween.to(this.roleImg, { scaleX: this.scaleper - 0.05, scaleY: this.scaleper - 0.05 }, this._showspeed);
            // this.maskBox.alpha=0.8;
            // this.disabled=true;
            this.showMask();
        }
    };
    /**
     * 黑影遮罩
     */
    ImgRoleBox.prototype.showMask = function () {
        if (!this.coverBlack) {
            this.coverBlack = new Laya.Image('skin/common/cover_black.png');
            this.addChild(this.coverBlack);
            this.coverBlack.alpha = 0;
        }
        else {
            this.coverBlack.visible = true;
            this.coverBlack.alpha = 0;
        }
        // console.log(this.roleImg.getBounds());
        var rectbound = this.roleImg.getBounds();
        // console.log(this.roleinfo);
        // console.log(rectbound);
        if (this.coverBlack) {
            this.coverBlack.width = rectbound.width + 150;
            this.coverBlack.height = rectbound.height;
            this.coverBlack.x = rectbound.x - 50;
            this.coverBlack.y = rectbound.y - 100;
            Laya.Tween.to(this.coverBlack, { alpha: 0.15 }, this._showspeed);
        }
    };
    ImgRoleBox.prototype.hideMask = function () {
        if (this.coverBlack) {
            // this.coverBlack.visible=false;
            Laya.Tween.to(this.coverBlack, { alpha: 0 }, this._showspeed);
        }
    };
    ImgRoleBox.prototype.moveLeft = function (pos, speed, front) {
        if (pos === void 0) { pos = 0; }
        if (speed === void 0) { speed = 500; }
        if (front === void 0) { front = 1; }
        if (this.roleImg) {
            this.postype = 1;
            if (pos == 1) {
                Laya.Tween.to(this.roleImg, { x: (this.width / 2 - this.width / 4) }, speed, null, Handler.create(this, this.resize, [front]));
            }
            else {
                Laya.Tween.to(this.roleImg, { x: (this.width / 2 - this.width / 4 - this.width / 16) }, speed, null, Handler.create(this, this.resize, [front]));
            }
        }
    };
    ImgRoleBox.prototype.moveRight = function (pos, speed, front) {
        if (pos === void 0) { pos = 0; }
        if (speed === void 0) { speed = 500; }
        if (front === void 0) { front = 1; }
        if (this.roleImg) {
            this.postype = 2;
            if (pos == 1) {
                Laya.Tween.to(this.roleImg, { x: (this.width / 2 + this.width / 4) }, speed, null, Handler.create(this, this.resize, [front]));
            }
            else {
                Laya.Tween.to(this.roleImg, { x: (this.width / 2 + this.width / 4 + this.width / 16) }, speed, null, Handler.create(this, this.resize, [front]));
            }
        }
    };
    ImgRoleBox.prototype.moveMiddle = function (speed, front) {
        if (speed === void 0) { speed = 500; }
        if (front === void 0) { front = 1; }
        if (this.roleImg) {
            this.postype = 0;
            Laya.Tween.to(this.roleImg, { x: this.width / 2 }, speed, null, Handler.create(this, this.resize, [front]));
        }
    };
    ImgRoleBox.prototype.clear = function () {
        this.removeChildren();
    };
    ImgRoleBox.prototype.onError = function () {
    };
    ImgRoleBox.prototype.maskRole = function () {
        //创建模糊滤镜实例
        var blurFilter = new Laya.BlurFilter(1);
        // 设置模糊强度
        // blurFilter.strength = 1;
        this.filters = [blurFilter];
    };
    return ImgRoleBox;
}(Laya.Panel));
//# sourceMappingURL=ImgRoleBox.js.map