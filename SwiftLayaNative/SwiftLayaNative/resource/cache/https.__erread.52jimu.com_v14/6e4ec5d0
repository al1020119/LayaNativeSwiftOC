var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var SupportingRoleSpeak = /** @class */ (function (_super) {
    __extends(SupportingRoleSpeak, _super);
    function SupportingRoleSpeak() {
        var _this = _super.call(this) || this;
        _this.tweenIsExist = false; //缓动小icon是否开启过缓动。开启过则不缓动了
        _this.width = 473;
        _this.centerX = 0;
        _this.y = Laya.stage.height / 2;
        _this.printBgImg = new LayaImage();
        _this.leadingNameImg = new LayaImage();
        _this.leadingNameText = new LayaLabel();
        _this.tweenNextImg = new LayaImage();
        _this.printControl = new jmt.common.SoulTextBox(_this.printBgImg, 427);
        _this.printControl.letterColor = '#492424';
        _this.createName();
        _this.createBg();
        _this.createTweenNextImg();
        return _this;
    }
    SupportingRoleSpeak.prototype.createName = function () {
        this.leadingNameText.font = jmt.Skin.FONT;
        this.leadingNameText.fontSize = 29;
        this.leadingNameText.color = '#414466';
        this.leadingNameText.centerX = 0;
        this.leadingNameText.centerY = 0;
        this.leadingNameImg.skin = 'skin/niji/read_name_box.png';
        this.leadingNameImg.right = 21;
        this.leadingNameImg.top = 0;
        this.leadingNameImg.addChild(this.leadingNameText);
        this.addChild(this.leadingNameImg);
    };
    //改变人物名字的背景图片宽度
    SupportingRoleSpeak.prototype.changeNameBgWidth = function () {
        //如果角色名宽度 》 角色名bgm宽度
        if (this.leadingNameText.width > 168 - 40) {
            this.leadingNameImg.sizeGrid = '18, 18, 18, 18';
            this.leadingNameImg.width = this.leadingNameText.width + 60;
        }
        else {
            this.leadingNameImg.width = 168;
        }
    };
    SupportingRoleSpeak.prototype.createBg = function () {
        this.printBgImg.skin = 'skin/niji/read_pj_dialog.png';
        this.printBgImg.top = this.leadingNameImg.height - 23;
        this.printBgImg.left = 0;
        this.printBgImg.sizeGrid = '50,80,60,30';
        this.printBgImg.height = 170;
        this.addChild(this.printBgImg);
        //记录height，用于重置
        this.resertBgheight = this.printBgImg.height;
    };
    SupportingRoleSpeak.prototype.createTweenNextImg = function () {
        this.tweenNextImg.skin = 'skin/niji/read_continue_icon.png';
        // this.tweenNextImg.bottom = 0;
        // this.tweenNextImg.right = 0;
        this.tweenNextImg.y = this.printBgImg.height - 35;
        this.tweenNextImg.x = this.printBgImg.width - 35;
        this.printBgImg.addChild(this.tweenNextImg);
        //记录top left，用于重置
        this.resertTweenNextImgTop = this.tweenNextImg.top;
        this.resertTweenNextImgleft = this.tweenNextImg.left;
    };
    SupportingRoleSpeak.prototype.initTween = function (roleName, infoText, skin, completeHanler) {
        this.leadingNameText.text = roleName;
        this.printControl.centerX = 0;
        this.printControl.top = 41;
        this.infoText = infoText;
        if (completeHanler) {
            this.completeHanler = completeHanler;
        }
        this.changeNameBgWidth();
        this.scaleY = 0.1;
        Laya.Tween.to(this, { scaleY: 1 }, 200, null, Handler.create(this, this.tweenHandler));
    };
    SupportingRoleSpeak.prototype.tweenHandler = function () {
        this.printPlay(this.infoText);
        //小三角形缩放动画
        //不存在缓动，才执行一次缓动
        if (!this.tweenIsExist) {
            Laya.Tween.to(this.tweenNextImg, { scaleX: 0.8, scaleY: 0.8 }, 500, null, Handler.create(this, this.nextTween));
        }
    };
    SupportingRoleSpeak.prototype.nextTween = function () {
        this.tweenIsExist = true;
        Laya.Tween.to(this.tweenNextImg, { scaleX: 1, scaleY: 1 }, 500, null, Handler.create(this, this.nextTween2));
    };
    SupportingRoleSpeak.prototype.nextTween2 = function () {
        Laya.Tween.to(this.tweenNextImg, { scaleX: 0.8, scaleY: 0.8 }, 500, null, Handler.create(this, this.nextTween));
    };
    //开始打字
    SupportingRoleSpeak.prototype.printPlay = function (info, completeHanler) {
        (completeHanler) && (this.completeHanler = completeHanler);
        this.printControl.play(info, this.completeHanler);
        if (this.printControl.height > 103) {
            // this.printBgImg.height = this.printControl.height + 70;
            Laya.Tween.to(this.printBgImg, { height: (this.printControl.height + 70) }, 500);
            this.printBgImg.on(Laya.Event.RESIZE, this, function resize() {
                this.tweenNextImg.y = this.printBgImg.height - 35;
            });
            // this.tweenNextImg.top = this.printBgImg.height -35;
            // this.tweenNextImg.left = this.printBgImg.width -35;
        }
        else {
            this.resertPos();
        }
    };
    //上次由于文本过高，吧对话框撑高了。下次高度不够撑高，就重置高度
    SupportingRoleSpeak.prototype.resertPos = function () {
        Laya.Tween.to(this.printBgImg, { height: (this.resertBgheight) }, 500, null);
        // this.printBgImg.height = this.resertBgheight;
        // this.tweenNextImg.top = this.resertTweenNextImgTop;
        // this.tweenNextImg.left = this.resertTweenNextImgleft
    };
    //两个不同配角切换的时候，对话框不重新弹窗，改变配角名字
    SupportingRoleSpeak.prototype.changeName = function (name) {
        this.leadingNameText.text = name;
    };
    return SupportingRoleSpeak;
}(Laya.Box));
//# sourceMappingURL=SupportingRoleSpeak.js.map