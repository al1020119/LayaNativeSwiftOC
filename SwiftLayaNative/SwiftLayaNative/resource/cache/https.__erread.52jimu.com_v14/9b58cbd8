var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var CloseUpView = /** @class */ (function (_super) {
    __extends(CloseUpView, _super);
    function CloseUpView(imgArray, time, complete) {
        var _this = _super.call(this) || this;
        _this.name = 'CloseUpView';
        _this.closeOnSide = true;
        _this.time = 0;
        if (imgArray.length > 0) {
            _this.height = 720;
        }
        else {
            _this.height = 364;
        }
        for (var i = 0; i < imgArray.length; i++) {
            var img = imgArray[i];
            img = jmt.Resource.toHttps(img);
            var box = new LayaBox();
            _this.addChild(box);
            box.width = _this.width;
            var bgImg = new LayaImage(jmt.Skin.READ_CLOSE_BG);
            var coverImg = new LayaImage(jmt.Skin.READ_CLOSE_COVER);
            var closeImg = new LayaImage(img);
            closeImg.mask = bgImg;
            box.addChild(bgImg);
            box.addChild(closeImg);
            box.addChild(coverImg);
            _this.addChild(box);
            if (i > 0) {
                box.y = 300;
            }
        }
        if (time) {
            _this.time = time;
        }
        if (complete) {
            _this.completeHandler = complete;
        }
        if (_this.time > 0) {
            Laya.timer.once(_this.time, _this, function () {
                _this.closeOnSide = true;
                _this.close();
            });
        }
        return _this;
    }
    CloseUpView.prototype.close = function () {
        if (this.closeOnSide) {
            _super.prototype.close.call(this);
            if (this.completeHandler) {
                this.completeHandler.run();
            }
        }
    };
    CloseUpView.prototype.onClosed = function () {
        _super.prototype.onClosed.call(this);
        // this.removeSelf();
        this.destroy(true);
    };
    return CloseUpView;
}(ui.dialog.CloseUpUI));
//# sourceMappingURL=CloseUpView.js.map