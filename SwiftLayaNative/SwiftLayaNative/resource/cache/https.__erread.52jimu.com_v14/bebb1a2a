var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var StartView = /** @class */ (function (_super) {
    __extends(StartView, _super);
    function StartView(complete) {
        var _this = _super.call(this) || this;
        _this.name = 'StartView';
        _this.loadcomplete = false;
        _this.showcomplete = false;
        _this.height = Laya.stage.height;
        _this.bgImg.height = _this.height;
        _this.bgImg.skin = jmt.Skin.STARUP_BG;
        // let bgImg = new Laya.Image(jmt.Skin.STARUP_BG);
        // this.addChild(bgImg);
        // bgImg.zOrder = -1;
        // bgImg.width = Laya.stage.width;
        // bgImg.height = Laya.stage.height;
        // this.bgImg.height = this.height;
        // this.mainLogo.centerY=0;
        // this.erjiBox.centerY=0;
        _this.mainLogo.y = (_this.height - _this.mainLogo.height) / 2;
        _this.erjiBox.y = (_this.height - _this.erjiBox.height) / 2;
        _this.completeHandler = complete;
        _this.beginLoad();
        Laya.timer.once(100, _this, _this.showLogo);
        return _this;
    }
    StartView.prototype.beginLoad = function () {
        var resArray = [
            { url: "part/Snowstorm.part", type: Laya.Loader.JSON },
            { url: "res/atlas/skin/clue.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/cover.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/sku.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/store.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/option.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/series.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/closeup.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/wait.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/end.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/asideact.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/skin/tip.atlas", type: Laya.Loader.ATLAS },
            // {url:jmt.Resource.MAIN_BGM,type:Laya.Loader.SOUND},//测试加载
            // {url:jmt.Resource.SOUND_MAIN_START,type:Laya.Loader.SOUND},//测试加载
            { url: jmt.Skin.MAIN_BG, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.MAIN_FOG1, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.MAIN_FOG2, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.GENERAL_BG, type: Laya.Loader.IMAGE },
            // {url:jmt.Skin.LOADING_BG,type:Laya.Loader.IMAGE},
            { url: jmt.Skin.CHAPTER_COVER_BG, type: Laya.Loader.IMAGE },
            // {url:jmt.Skin.SYS_BOX,type:Laya.Loader.IMAGE},
            { url: jmt.Skin.PIECES_RESULT_BOX, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.CUSTOM_NAMEBOX_BG, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.END_BG, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.EFFECT_EYE, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.ILLUSTRATION_BG, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.CLUE_COLLECT_BG, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.TIPS_STORE, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.TIPS_LOG, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.TIPS_SKU, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.TIPS_CLUE_1, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.TIPS_CLUE_2, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.POPU_ADDDESK, type: Laya.Loader.IMAGE },
            { url: jmt.Skin.CHAPTER_PAYBG, type: Laya.Loader.IMAGE }
        ];
        // jmt.Print.log(resArray);
        Laya.loader.load(resArray, Handler.create(this, this.onLoaded), Laya.Handler.create(this, this.onProgress, null, false), null, null, true);
    };
    StartView.prototype.onLoaded = function () {
        // jmt.Print.log('onLoaded');
        //加载网络资源
        var apiUtil = new ApiUtil();
        apiUtil.loadRes(0, Handler.create(this, this.onLoadComplete));
    };
    StartView.prototype.onLoadComplete = function (res) {
        // jmt.Print.log('onLoadComplete');
        if (res) {
            if (res.downlist) {
                res = res.downlist;
            }
            // jmt.Print.log(res.downlist);
            var resArray = [];
            var filesize = 0;
            // Laya.URL.basePath = jmt.Config.RES_DOMAIN;
            for (var index = 0; index < res.length; index++) {
                // this.loadingText.text='0%';
                // this.loadProgress.value = 0;
                var line = res[index];
                var arr = line.split(',');
                var path = arr[0];
                var name = arr[1];
                //console.log(obj);
                var type = Laya.Loader.IMAGE;
                if (path.match('audio')) {
                    type = Laya.Loader.SOUND;
                }
                else if (path.match('role') && name.match('.sk')) {
                    type = Laya.Loader.BUFFER; //骨骼动画，必须指定类型
                }
                if (type == Laya.Loader.IMAGE || type == Laya.Loader.BUFFER) {
                    var obj = {
                        url: jmt.Config.RES_DOMAIN + path + '/' + name,
                        type: type
                    };
                    resArray.push(obj);
                    filesize += arr[2];
                }
                // Laya.loader.load(obj.url, Handler.create(this, this.onComplete), Handler.create(this, this.onProgress,null,false),type);
                // 侦听加载失败
                // Laya.loader.on(Laya.Event.ERROR, this, this.onError);    
            }
            if (resArray.length > 0) {
                //TODO: 注意加载类型，可能导致无法显示
                Laya.loader.load(resArray, Laya.Handler.create(this, this.onComplete), Laya.Handler.create(this, this.onProgress, null, false), null, null, true);
                // 侦听加载失败
                Laya.loader.on(Laya.Event.ERROR, this, this.onError);
            }
            else {
                this.onComplete();
            }
        }
        else {
            this.onComplete();
        }
    };
    StartView.prototype.onError = function (err) {
        // console.log("加载失败: " + err);
    };
    StartView.prototype.onProgress = function (pro) {
        // console.log("加载了总文件的:"+pro*100+"%");
        // let iconp = Math.floor(pro * 100/2)-1;
        // this.iconBox.goto(iconp);
        var progress = Math.floor(pro * 100) + '';
        // console.log(progress);
        var text = '正在加载资源' + progress + '%';
        // jmt.Print.log(text);
        if (text) {
            // this.loadingText.text=text;
            // this.loadProgress.value = pro;	
        }
    };
    StartView.prototype.onComplete = function (texture) {
        var uid = jmt.util.Common.getQuery('uid');
        this.loadcomplete = true;
        if (uid) {
            this.showcomplete = true;
            this.onClose();
        }
        else {
            this.hideErji();
        }
    };
    StartView.prototype.timeSpace = function () {
        Laya.timer.once(1000, this, this.hideLogo);
    };
    StartView.prototype.showLogo = function () {
        Laya.Tween.to(this.mainLogo, { alpha: 1 }, 1000, null, Handler.create(this, this.timeSpace));
    };
    StartView.prototype.hideLogo = function () {
        Laya.Tween.to(this.mainLogo, { alpha: 0 }, 500, null, Handler.create(this, this.showErji));
    };
    StartView.prototype.showErji = function () {
        this.iconText = new Label('正在载入');
        this.iconText.color = '#666666';
        this.iconText.font = jmt.Skin.FONT;
        this.iconText.fontSize = 24;
        this.addChild(this.iconText);
        // this.iconText.pivot(this.iconText.width/2, this.iconText.height/2);
        this.iconText.x = this.width - 130;
        this.iconText.y = this.height - 80;
        this.loadIcon = new jmt.loading.Loading(this, 0, 30, 30);
        this.loadIcon.x = this.iconText.x - 50;
        this.loadIcon.y = this.height - 80;
        Laya.Tween.to(this.erjiBox, { alpha: 1 }, 1000, null, Handler.create(this, this.timeSpace2));
    };
    StartView.prototype.timeSpace2 = function () {
        Laya.timer.once(800, this, this.showErjicomplete);
    };
    StartView.prototype.showErjicomplete = function () {
        this.showcomplete = true;
        this.hideErji();
    };
    StartView.prototype.hideErji = function () {
        if (this.loadcomplete) {
            Laya.Tween.to(this.erjiBox, { alpha: 0 }, 500, null, Handler.create(this, this.onClose));
        }
    };
    StartView.prototype.onClose = function () {
        if (this.loadcomplete && this.showcomplete) {
            //从舞台移除自己
            // jmt.Resource.clearTextureRes(this.bgImg.skin);
            // jmt.Resource.clearTextureRes(this.mainLogo.skin);
            // jmt.Resource.clearTextureRes(this.erjiIcon.skin);
            if (this.completeHandler) {
                this.completeHandler.run();
            }
            // this.removeSelf();//与destory冲突，remove后，destory无效
            //只加载一次，因此直接消毁自己
            this.destroy(true);
        }
    };
    return StartView;
}(ui.home.StartUI));
//# sourceMappingURL=StartView.js.map