var jmt;
(function (jmt) {
    var util;
    (function (util) {
        var Common = /** @class */ (function () {
            function Common() {
            }
            Common.isShareBrowser = function () {
                //    console.log(window.navigator.userAgent);
                if (window.navigator.userAgent.indexOf('LayaBox') == -1) {
                    return 1;
                }
                else {
                    return 0;
                }
            };
            //转换为k,保留1位小数
            Common.numberChangeK = function (n) {
                var digital = n;
                if (digital < 1000) {
                    return digital;
                }
                else {
                    digital = Math.floor((digital / 1000) * 10) / 10;
                    // digital = digital.toString(digital);
                    // digital = (parseInt(digital[digital.length-1])) ? parseFloat(digital) : parseInt(digital); //拿最后一位数，判断是否是1
                    return digital;
                }
            };
            // 获取随机数
            Common.getRandom = function (startN, endN) {
                var random = endN - startN + 1;
                return Math.floor((Math.random() * random) + startN);
            };
            Common.numpre = function (num, len, pre) {
                if (len === void 0) { len = 2; }
                if (pre === void 0) { pre = '0'; }
                var nums = num + '';
                var t = nums.length, s = '';
                for (var i = 0; i < len - t; i++) {
                    s += '0';
                }
                return s + nums;
            };
            Common.numToCn = function (num) {
                var str = '';
                switch (num) {
                    case 1:
                        str = '一';
                        break;
                    case 2:
                        str = '二';
                        break;
                    case 3:
                        str = '三';
                        break;
                    case 4:
                        str = '四';
                        break;
                    case 5:
                        str = '五';
                        break;
                    case 6:
                        str = '六';
                        break;
                    case 7:
                        str = '七';
                        break;
                    case 8:
                        str = '八';
                        break;
                    case 9:
                        str = '九';
                        break;
                    case 10:
                        str = '十';
                        break;
                    default:
                        break;
                }
                return str;
            };
            //获取 浏览器 链接参数
            Common.getQuery = function (name) {
                try {
                    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
                    var r = window.location.search.substr(1).match(reg);
                    if (r != null)
                        return unescape(r[2]);
                }
                catch (error) {
                    return null;
                }
                return null;
            };
            Common.clearStage = function () {
                for (var i = 0; i < Laya.stage.numChildren; i++) {
                    var ch = Laya.stage.getChildAt(i);
                    // console.log('clearState: '+ch.name);
                    // console.log(ch);
                    if (ch.name != '') {
                        // console.log('clearState2: '+ch.name);
                        // Laya.stage.removeChildAt(i);     
                        ch.removeSelf(); //与destory冲突，remove后，destory无效
                        // ch.removeChildren();
                        // ch.destroyChildren();
                        // if (!ch.destroyed) {
                        //     ch.destroy(true);
                        // }                    
                    }
                }
            };
            return Common;
        }());
        util.Common = Common;
        var Sound = /** @class */ (function () {
            function Sound(parameters) {
                // Laya.timer.once(timeout,this, ()=>{
                //     this.mainbox.removeSelf();
                //     this.mainbox.destroy();
                //     this.mainbox=null;
                // });
            }
            Sound.stopAllSound = function () {
                try {
                    if (Laya.Browser.onMiniGame) {
                        WxUtil.stopBgm(2);
                    }
                    else {
                        SoundManager.stopAllSound();
                    }
                }
                catch (error) {
                    // jmt.Print.log('stopAllSound');
                    // jmt.Print.log(error);
                    return;
                }
            };
            Sound.stopSound = function (url) {
                try {
                    var volume = 0;
                    // if (WywUtil.onLimixiu()) {
                    //     volume = 0;
                    // }else{
                    volume = SoundManager.musicVolume;
                    // }
                    volume -= 0.05;
                    if (volume <= 0) {
                        // if (WywUtil.onLimixiu()) {
                        //     WywUtil.stopSound(url);
                        // }else{
                        SoundManager.stopSound(url);
                        SoundManager.destroySound(url);
                        // }                
                    }
                    else {
                        // if (WywUtil.onLimixiu()) {
                        //     WywUtil.setSoundVolume(url,volume);
                        // }else{
                        SoundManager.setSoundVolume(volume, url);
                        // }
                        Laya.timer.once(50, this, this.stopSound, [url]);
                    }
                }
                catch (error) {
                    // jmt.Print.log('stopSound');
                    // jmt.Print.log(error);
                    return;
                }
            };
            Sound.stopMusic = function (complete) {
                try {
                    var volume = 0;
                    if (WywUtil.onLimixiu()) {
                        if (WywUtil.musicContext) {
                            volume = WywUtil.musicContext.volume;
                        }
                    }
                    else if (Laya.Browser.onMiniGame) {
                        if (WxUtil.bgm) {
                            volume = WxUtil.bgm.volume;
                        }
                    }
                    else {
                        volume = SoundManager.musicVolume;
                    }
                    volume -= 0.01;
                    if (volume <= 0) {
                        if (WywUtil.onLimixiu()) {
                            WywUtil.stopMusic();
                        }
                        else if (Laya.Browser.onMiniGame) {
                            WxUtil.stopBgm(1);
                        }
                        else {
                            SoundManager.stopMusic();
                        }
                        if (complete) {
                            complete.run();
                        }
                    }
                    else {
                        if (WywUtil.onLimixiu()) {
                            WywUtil.setMusicVolume(volume);
                        }
                        else if (Laya.Browser.onMiniGame) {
                            WxUtil.setBgmVolume(volume, WxUtil.bgm);
                        }
                        else {
                            SoundManager.setMusicVolume(volume);
                        }
                        Laya.timer.once(50, this, this.stopMusic, [complete]);
                    }
                }
                catch (error) {
                    // jmt.Print.log('stopMusic');
                    // jmt.Print.log(error);
                    return;
                }
            };
            Sound.playSound = function (url, restype, loops, complete, destroy) {
                if (loops === void 0) { loops = 1; }
                if (destroy === void 0) { destroy = true; }
                try {
                    // var volume = jmt.Data.getPlayVolume(restype);
                    // if (WywUtil.onLimixiu()) {
                    // jmt.common.Toast.msg('playSound');
                    //     WywUtil.playSound(url,volume,loops,complete);
                    // }else{                    
                    // SoundManager.playSound(url,loops,complete);
                    // SoundManager.autoReleaseSound = true;
                    // SoundManager.setSoundVolume(volume);//设置音量
                    // }
                    //先加载后播放，防止第一次播放失败
                    if (Laya.Browser.onMiniGame) {
                        this.playSound2(url, restype, loops, complete, destroy);
                    }
                    else {
                        Laya.loader.load(url, Laya.Handler.create(this, this.playSound2, [url, restype, loops, complete, destroy]), null, Laya.Loader.SOUND);
                    }
                }
                catch (error) {
                    // jmt.Print.log('playSound');
                    // jmt.Print.log(error);
                    return;
                }
            };
            Sound.playSound2 = function (url, restype, loops, complete, destroy) {
                if (loops === void 0) { loops = 1; }
                if (destroy === void 0) { destroy = true; }
                // jmt.Print.log('playSound2');
                // 平台，先去掉播放声效
                // if(1){
                //     return;
                // }
                var volume = jmt.Data.getPlayVolume(restype);
                //设置微信音效
                if (Laya.Browser.onMiniGame) {
                    WxUtil.playBgm(url, volume, loops, 2, complete);
                }
                else {
                    SoundManager.useAudioMusic = false;
                    SoundManager.playSound(url, loops, complete);
                    if (destroy) {
                        SoundManager.autoReleaseSound = true;
                    }
                    SoundManager.setSoundVolume(volume); //设置音量
                }
            };
            Sound.playMusic = function (url, restype, loops, complete) {
                if (loops === void 0) { loops = 1; }
                try {
                    //先加载后播放，防止第一次播放失败
                    Laya.loader.load(url, Laya.Handler.create(this, this.playMusic2, [url, restype, loops, complete]), null, Laya.Loader.SOUND);
                }
                catch (error) {
                    // jmt.Print.log('playMusic');
                    // jmt.Print.log(error);
                    return;
                }
            };
            Sound.playMusic2 = function (url, restype, loops, complete) {
                // jmt.Print.log('playMusic2');
                if (loops === void 0) { loops = 1; }
                var volume = jmt.Data.getPlayVolume(restype);
                if (WywUtil.onLimixiu()) {
                    // jmt.common.Toast.msg('playMusic');
                    WywUtil.playMusic(url, volume, loops, complete);
                }
                else if (Laya.Browser.onMiniGame) {
                    WxUtil.playBgm(url, volume, loops, 1, complete);
                }
                else {
                    SoundManager.useAudioMusic = false;
                    SoundManager.playMusic(url, loops, complete);
                    SoundManager.setMusicVolume(volume); //设置音量
                }
            };
            /**
             * 切换音乐(淡出)
             * @param url
             * @param restype
             * @param loops
             * @param complete
             */
            Sound.changeMusic = function (url, restype, loops, complete) {
                if (loops === void 0) { loops = 1; }
                this.stopMusic(Handler.create(this, this.playMusic, [url, restype, loops, complete]));
            };
            return Sound;
        }());
        util.Sound = Sound;
    })(util = jmt.util || (jmt.util = {}));
})(jmt || (jmt = {}));
//# sourceMappingURL=Utils.js.map